---
- name: install postgres container
  hosts: atomichosts

  vars_files:
    - vault.yml
    - vars.yml

  tasks:
    - name: template postgres deployment
      template:
        src: templates/deployments/postgres.j2
        dest: /var/kubernetes/deployments/postgres.yml
        owner: root
        group: root
        mode: 0644

    - name: expose postgres deployment
      command: /usr/bin/kubectl expose deployment postgres
      failed_when: false
      tags: [latest]
      changed_when: false

    - name: create postgres deployment
      command: /usr/bin/kubectl create -f /var/kubernetes/deployments/postgres.yml
      register: createdeployments
      failed_when: false
      tags: [latest]
      changed_when: false

    - name: get postgres address
      command: /usr/bin/kubectl get ep postgres --output=json
      changed_when: false
      register: postgres_raw
      tags: [ grants ]

    - set_fact:
        postgres_endpoint: "{{ postgres_raw.stdout | from_json }}"
      tags: [ grants ]

    - set_fact:
        postgres_ip: "{{ postgres_endpoint.subsets[0].addresses[0].ip }}"
      tags: [ grants ]

    # TODO may have to run ldconfig as ostree doesn't?

    - name: create postgres databases
      postgresql_db:
        name: "{{ item }}"
        login_host: "{{ postgres_ip }}"
        login_user: postgres
        login_password: "{{ secrets.postgres_passwords['postgres'] }}"
        state: present
      with_items: "{{ postgres_databases }}"
      tags: [ grants ]

    - debug:
        var: postgres_ip
      tags: [ grants ]

    - name: create postgres users
      postgresql_user:
        db: "{{ item.name }}"
        name: "{{ item.name }}"
        password: "{{ secrets.postgres_passwords[item.name] }}"
        state: present
        login_host: "{{ postgres_ip }}"
        login_user: postgres
        login_password: "{{ secrets.postgres_passwords['postgres'] }}"
      with_items: "{{ postgres_users }}"
      tags: [ grants ]
